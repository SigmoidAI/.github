name: Update Organization Contributors with Leaderboard

on:
  schedule:
    - cron: "0 0 1 * *"  # Runs on the 1st of each month
  workflow_dispatch: # Allows manual triggering

jobs:
  update-contributors:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install GitHub CLI and jq
        run: |
          sudo apt update
          sudo apt install -y gh jq

      - name: Fetch all repositories in the organization
        run: |
          echo "Fetching all repositories..."
          gh repo list SigmoidAI --limit 100 --json name,isFork -q '.[] | "\(.name) \(.isFork)"' > repos.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch contributors and filter only local ones
        run: |
          declare -A contributor_commits

          while IFS= read -r line; do
            repo=$(echo "$line" | jq -r '.name')
            isFork=$(echo "$line" | jq -r '.isFork')
            echo "Processing repository: $repo"

            # Get the default branch name
            default_branch=$(gh api repos/SigmoidAI/$repo --jq '.default_branch')

            # If it's a fork, find contributors who committed only after forking
            if [[ "$isFork" == "true" ]]; then
              echo "Repository $repo is a fork. Filtering only local contributors."
              gh api repos/SigmoidAI/$repo/commits --paginate --jq '.[].author.login' > local_contributors.txt
            else
              echo "Repository $repo is not a fork. Including all contributors."
              gh api repos/SigmoidAI/$repo/contributors --paginate --jq '.[] | {login: .login, commits: .contributions}' > tmp_contributors.json
            fi

            # Process contributors
            if [[ -f local_contributors.txt ]]; then
              grep -Fxf local_contributors.txt tmp_contributors.json > filtered_contributors.json || touch filtered_contributors.json
            else
              cp tmp_contributors.json filtered_contributors.json
            fi

            # Aggregate contributions
            while IFS= read -r line; do
              contributor=$(echo "$line" | awk '{print $1}')
              commits=$(echo "$line" | awk '{print $2}' | tr -d '()')

              if [[ -n "$contributor" && -n "$commits" ]]; then
                contributor_commits[$contributor]=$(( ${contributor_commits[$contributor]:-0} + commits ))
              fi
            done < <(jq -r '.login + " " + (.commits | tostring)' filtered_contributors.json)

          done < repos.txt

          echo "# Organization Contributors (Local Only)" > CONTRIBUTORS.md
          echo "This list is auto-generated and sorted by total contributions across all repositories, excluding upstream contributors from forks." >> CONTRIBUTORS.md
          echo "" >> CONTRIBUTORS.md

          echo "| Contributor | Contributions |" > LEADERBOARD.md
          echo "|------------|--------------|" >> LEADERBOARD.md

          for contributor in "${!contributor_commits[@]}"; do
            echo "$contributor ${contributor_commits[$contributor]}" >> sorted_contributors.txt
          done

          sort -k2 -nr sorted_contributors.txt | while read -r contributor total_commits; do
            echo "- @$contributor: $total_commits commits" >> CONTRIBUTORS.md

            profile_url="https://github.com/$contributor"
            profile_pic="https://github.com/$contributor.png?size=50"
            echo "| ![$contributor]($profile_pic) [@$contributor]($profile_url) | $total_commits commits |" >> LEADERBOARD.md
          done

          rm -f sorted_contributors.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update README with Leaderboard
        run: |
          # Remove old leaderboard if it exists
          sed -i '/<!-- LEADERBOARD START -->/,/<!-- LEADERBOARD END -->/d' README.md

          # Insert updated leaderboard
          echo "<!-- LEADERBOARD START -->" >> README.md
          cat LEADERBOARD.md >> README.md
          echo "<!-- LEADERBOARD END -->" >> README.md

        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          git add README.md CONTRIBUTORS.md LEADERBOARD.md
          git commit -m "Updated contributors leaderboard in README" || echo "No changes to commit"
          git push
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
