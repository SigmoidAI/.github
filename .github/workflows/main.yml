name: Update Organization Contributors with Local Commits Only
on:
  schedule:
    - cron: "0 0 1 * *"  # Runs on the 1st of each month
  workflow_dispatch: # Allows manual triggering

jobs:
  update-contributors:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh jq

      - name: Fetch and process contributors
        run: |
          # Initialize contributors section for README
          CONTRIB_SECTION="## üë• Contributors\n\nThanks to all our contributors! üôè\n\n"
          CONTRIB_SECTION+="<table>\n<tr>\n"
          COUNTER=0
          
          # Create temporary file for storing all contributions
          touch all_contributions.txt
          
          # Fetch all repositories in the organization
          gh repo list SigmoidAI --json name,isFork --jq '.[]' > repos.json
          
          # Process each repository
          while IFS= read -r repo_data; do
            repo_name=$(echo "$repo_data" | jq -r '.name')
            is_fork=$(echo "$repo_data" | jq -r '.isFork')
            echo "Processing repository: $repo_name"
            
            if [ "$is_fork" = "true" ]; then
              # For forked repos, get the fork creation date
              fork_date=$(gh api repos/SigmoidAI/$repo_name --jq '.created_at')
              
              # Get all commits after fork date using the since parameter
              gh api "repos/SigmoidAI/$repo_name/commits?since=$fork_date" --paginate \
                --jq '.[] | select(.author != null) | {login: .author.login, date: .commit.author.date}' > repo_commits.json
              
              # Count commits per author
              jq -r '.login' repo_commits.json | sort | uniq -c | while read -r count login; do
                [ ! -z "$login" ] && echo "$login $count" >> all_contributions.txt
              done
            else
              # For non-forked repos, get all contributors
              gh api repos/SigmoidAI/$repo_name/contributors --paginate \
                --jq '.[] | select(.login != null) | {login: .login, contributions: .contributions}' > repo_contributors.json
              
              # Add contributions to total
              jq -r '. | "\(.login) \(.contributions)"' repo_contributors.json >> all_contributions.txt
            fi
          done < <(jq -c '.' repos.json)
          
          # Sum up all contributions and sort
          awk '{contrib[$1] += $2} END {for (author in contrib) print author, contrib[author]}' all_contributions.txt | \
            sort -k2 -nr | \
            while read -r author commits; do
              # Get user data including avatar
              user_data=$(gh api users/$author --jq '[.avatar_url, .name // .login, .bio // ""]')
              avatar_url=$(echo "$user_data" | jq -r '.[0]')
              name=$(echo "$user_data" | jq -r '.[1]')
              
              # Add to table (4 contributors per row)
              if [ $COUNTER -eq 4 ]; then
                CONTRIB_SECTION+="</tr>\n<tr>\n"
                COUNTER=0
              fi
              
              CONTRIB_SECTION+="<td align=\"center\">\n"
              CONTRIB_SECTION+="<a href=\"https://github.com/$author\">\n"
              CONTRIB_SECTION+="<img src=\"$avatar_url\" width=\"100px;\" alt=\"$name\"/><br />\n"
              CONTRIB_SECTION+="<sub><b>$name</b></sub>\n"
              CONTRIB_SECTION+="</a><br />\n"
              CONTRIB_SECTION+="<a href=\"https://github.com/SigmoidAI/search?q=$author\">\n"
              CONTRIB_SECTION+="<img src=\"https://img.shields.io/badge/Contributions-$commits-green?style=flat-square&logo=github\" alt=\"Contributions\"/>\n"
              CONTRIB_SECTION+="</a>\n"
              CONTRIB_SECTION+="</td>\n"
              
              COUNTER=$((COUNTER + 1))
            done
          
          # Close the table
          if [ $COUNTER -ne 0 ]; then
            # Fill remaining cells in last row if needed
            while [ $COUNTER -lt 4 ]; do
              CONTRIB_SECTION+="<td></td>\n"
              COUNTER=$((COUNTER + 1))
            done
          fi
          CONTRIB_SECTION+="</tr>\n</table>\n"
          
          # Update README.md
          if grep -q "## üë• Contributors" README.md; then
            # If contributors section exists, replace it
            sed -i "/## üë• Contributors/,/## /c\\$CONTRIB_SECTION" README.md
          else
            # If no contributors section exists, append it
            echo -e "\n$CONTRIB_SECTION" >> README.md
          fi
          
          # Clean up temporary files
          rm -f repos.json repo_commits.json repo_contributors.json all_contributions.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add README.md
          git commit -m "Updated contributors section in README" || echo "No changes to commit"
          git push
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sync-contributors:
    needs: [update-contributors]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Update README with contributors
        run: |
          # Read the contributors data
          CONTRIBUTORS=$(cat CONTRIBUTORS.md)
          
          # Create a temporary file for the new README content
          awk '
          /<!-- CONTRIBUTORS-START -->/ {
            print
            while (getline line < "CONTRIBUTORS.md") {
              print line
            }
            next
          }
          /<!-- CONTRIBUTORS-END -->/ {
            print
            next
          }
          { print }
          ' README.md > README.tmp
          
          # Replace the old README with the new one
          mv README.tmp README.md

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git pull
          git add README.md
          git commit -m "Sync contributors to README" || echo "No changes to commit"
          git push
